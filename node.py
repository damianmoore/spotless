# Copyright 2012 Damian Moore
#
# This file is part of Spotless.
#
# Spotless is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Spotless is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.


import os
from datetime import datetime

from utils import generate_hash, format_time_iso


class Node():
    '''
    Represents an individual file or directory. Has attributes for
    filesystem metadata as well as info generated by the system such as 'hash'
    and 'last_seen'.
    '''

    def __init__(self, path):
        self.path = os.path.abspath(path)
        if not os.path.exists(self.path):
            raise OSError('File not found')
        self.hash = None
        self.bytes = None
        self.type = None
        self.permissions = None
        self.created = None
        self.modified = None
        self.last_seen = None
        self.level = None

    def __unicode__(self):
        print self.path

    def update_info(self, datastore):
        '''
        Datastore needs to be provided so we can update hashes of parent dirs.
        '''
        if os.path.isfile(self.path):
            self.type = 'f'
        elif os.path.isdir(self.path):
            self.type = 'd'
        else:
            raise IOError('Path \'%s\' is an unsupported type' % self.path)

        stats = os.stat(self.path)
        if self.type == 'f': # We will generate dir hashes in a seond pass once all the nodes are in the database
            self.hash = generate_hash(self)
        self.bytes = stats.st_size
        self.permissions = stats.st_mode
        self.created = format_time_iso(datetime.fromtimestamp(stats.st_ctime))
        self.modified = format_time_iso(datetime.fromtimestamp(stats.st_mtime))
        self.last_seen = format_time_iso(datetime.now())
        self.level = len(self.path.split(os.path.sep)[1:])

    def set_info_from_list(self, data):
        self.path = data[0]
        self.hash = data[1]
        self.bytes = data[2]
        self.type = data[3]
        self.permissions = data[4]
        self.created = data[5]
        self.modified = data[6]
        self.last_seen = data[7]
        self.level = data[8]
